# name: Deploy to GitHub Pages

# on:
#   push:
#     branches: [ master ] 
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# concurrency:
#   group: pages
#   cancel-in-progress: true

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: 'npm'
#       - run: npm ci
#       - run: npm run export
#       - run: mkdir -p out && touch out/.nojekyll
#       - uses: actions/upload-pages-artifact@v3
#         with:
#           path: ./out
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     steps:
#       - id: deployment
#         uses: actions/deploy-pages@v4

name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      # Run next build (this performs static export when output: 'export' is set)
      - run: npm run build

      # Create .nojekyll so GitHub Pages doesn't ignore folders like _next/
      - run: echo > out/.nojekyll

      # Upload the 'out' directory generated by next build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

